#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          iscsitarget
# Required-Start:    $remote_fs $syslog $network $time procps
# Required-Stop:     $remote_fs $syslog $network $time procps
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts and stops the iSCSI target
### END INIT INFO

PID_FILE=/var/run/ietd.pid
CONFIG_FILE=/etc/iet/ietd.conf
DAEMON=/usr/sbin/ietd

PATH=/sbin:/bin:/usr/sbin:/usr/bin



ISCSITARGET_ENABLE=false
ISCSITARGET_DEFAULTS_FILE=/etc/default/iscsitarget
if [ -s "$ISCSITARGET_DEFAULTS_FILE" ]; then
    . "$ISCSITARGET_DEFAULTS_FILE"
    case "x$ISCSITARGET_ENABLE" in
        xtrue|xfalse) ;;
        *)
            exit 1
            ;;
    esac
fi

RETVAL=0

ietd_start()
{
	modprobe -q crc32c
	modprobe iscsi_trgt
	RETVAL=$?
	if [ $RETVAL != "0" ] ;  then 
		exit $RETVAL
	fi
	start-stop-daemon --start --exec $DAEMON --quiet --oknodo
	RETVAL=$?
	if [ $RETVAL = "0" ]; then
		echo ""
	else
		exit $RETVAL
	fi	    
	exit 0
}
	
ietd_stop()
{
	pidof ietd >/dev/null 2>&1 
	RETVAL=$?
	if [ $RETVAL = "0" ] ; then
		# ugly, but ietadm does not allways provides correct exit values
		RETURN=`ietadm --op delete 2>&1`
		RETVAL=$?
		if [ $RETVAL = "0" ] && [ "$RETURN" != "something wrong" ] ; then
			echo ""
		else
			echo ""
			exit $RETVAL
		fi
		start-stop-daemon --stop --quiet --exec $DAEMON --pidfile $PID_FILE --oknodo
		RETVAL=$?
		if [ $RETVAL = "0" ]; then
			echo ""
		else
			echo ""
		fi
	else
		echo""
	fi
	# ugly, but pid file is not removed by ietd
	rm -f $PID_FILE
	
	# check if the module is loaded at all
	lsmod | grep -q iscsi_trgt
	RETVAL=$?
	if [ $RETVAL = "0" ] ; then
		
		modprobe -r iscsi_trgt
		RETVAL=$?
		modprobe -r crc32c 2>/dev/null
		if [ $RETVAL = "0" ]; then
			echo ""
		else
			ehco ""
			# Lack of module unloading should be reported,
			# but not necessarily exit non-zero
		fi
	fi
}

case "$1" in
  start)
        if [ "$ISCSITARGET_ENABLE" = "true" ]; then
            ietd_start
        else
        	echo ""
        fi
        ;;
  stop)
        ietd_stop
        ;;
  restart|force-reload)
        ietd_stop
	sleep 1
        if [ "$ISCSITARGET_ENABLE" = "true" ]; then
            ietd_start
        else
        	echo ""
        fi
        ;;
  status)
	status_of_proc -p $PID_FILE $DAEMON "iSCSI enterprise target" && exit 0 || exit $?
	;;
  *)
  	echo ""
        exit 1
esac

exit 0
